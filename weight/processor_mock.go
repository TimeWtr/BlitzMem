// Code generated by MockGen. DO NOT EDIT.
// Source: processor.go
//
// Generated by this command:
//
//	mockgen -source=processor.go -destination=processor_mock.go -package=weight Processor
//

// Package weight is a generated GoMock package.
package weight

import (
	reflect "reflect"

	common "github.com/TimeWtr/TurboAlloc/common"
	gomock "go.uber.org/mock/gomock"
)

// MockProcessor is a mock of Processor interface.
type MockProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockProcessorMockRecorder
	isgomock struct{}
}

// MockProcessorMockRecorder is the mock recorder for MockProcessor.
type MockProcessorMockRecorder struct {
	mock *MockProcessor
}

// NewMockProcessor creates a new mock instance.
func NewMockProcessor(ctrl *gomock.Controller) *MockProcessor {
	mock := &MockProcessor{ctrl: ctrl}
	mock.recorder = &MockProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessor) EXPECT() *MockProcessorMockRecorder {
	return m.recorder
}

// BuildGlobalStruct mocks base method.
func (m *MockProcessor) BuildGlobalStruct(normalizeConf common.Config) map[common.SizeCategory]float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildGlobalStruct", normalizeConf)
	ret0, _ := ret[0].(map[common.SizeCategory]float64)
	return ret0
}

// BuildGlobalStruct indicates an expected call of BuildGlobalStruct.
func (mr *MockProcessorMockRecorder) BuildGlobalStruct(normalizeConf any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildGlobalStruct", reflect.TypeOf((*MockProcessor)(nil).BuildGlobalStruct), normalizeConf)
}

// BuildSizeClassStruct mocks base method.
func (m *MockProcessor) BuildSizeClassStruct(normalizeConf common.Config) map[common.SizeCategory][]float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildSizeClassStruct", normalizeConf)
	ret0, _ := ret[0].(map[common.SizeCategory][]float64)
	return ret0
}

// BuildSizeClassStruct indicates an expected call of BuildSizeClassStruct.
func (mr *MockProcessorMockRecorder) BuildSizeClassStruct(normalizeConf any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildSizeClassStruct", reflect.TypeOf((*MockProcessor)(nil).BuildSizeClassStruct), normalizeConf)
}

// Close mocks base method.
func (m *MockProcessor) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockProcessorMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockProcessor)(nil).Close))
}

// Normalize mocks base method.
func (m *MockProcessor) Normalize(cfg common.Config) (common.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Normalize", cfg)
	ret0, _ := ret[0].(common.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Normalize indicates an expected call of Normalize.
func (mr *MockProcessorMockRecorder) Normalize(cfg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Normalize", reflect.TypeOf((*MockProcessor)(nil).Normalize), cfg)
}
